The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a matrix by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing a matrix by 0:
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Dividing element string:
    >>> matrix_divided([[1, 2], [3, 'a']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix by a float:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1.5)
    [[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

Dividing a matrix that contain positive and negative number:
    >>> matrix_divided([[1.5, -2.5, 3.5], [-4.5, 5.5, -6.5]], 2)
    [[0.75, -1.25, 1.75], [-2.25, 2.75, -3.25]]

Passing an empty matrix:
    >>> matrix_divided([], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a tuple as an argument:

    >>> matrix_divided((3, 6, 9), 3)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix which its rows don't have the same size:

    >>> matrix_divided([[22, 34], [2.78, 7.1, -10, 2], [-8]], 3)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

Dividing a matrix which its rows don't have the same size 2:

    >>> matrix_divided([[2, 4], [6.8], [10, 12]], 12)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

Passing a matrix which one of its elements is an empty list:

    >>> matrix_divided([[2.1, 5.8], [], [10, -3]], 8)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix which its elements aren't integer/float numbers:

    >>> matrix_divided([["Hello", "World"], ["Hello", "Holberton"]], 10)
    Traceback (most recent call last):
     	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
